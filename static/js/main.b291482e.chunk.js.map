{"version":3,"sources":["components/navigation/navigation.js","components/inputform/inputform.js","components/rank/rank.js","components/facedetection/facedetection.js","components/signin/signin.js","components/registration/registration.js","pointers.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","className","onClick","InputForm","onInputChange","onButtonSubmit","type","placeholder","onChange","Rank","name","entries","FaceDetection","imageUrl","box","id","alt","src","width","height","top","toprow","bottom","bottomrow","right","rightcol","left","leftcol","SignIn","props","onEmailChange","event","setState","signInEmail","target","value","onPasswordChange","signInPassword","onSubmitSignin","isButtonLoading","fetch","method","headers","body","JSON","stringify","email","state","password","then","response","json","data","loadUser","console","log","alert","htmlFor","this","Component","Register","onNameChange","registeredName","registeredEmail","registeredPassword","onSubmitRegister","Params","particles","number","density","enable","value_area","color","shape","stroke","polygon","nb_sides","image","opacity","random","anim","speed","opacity_min","sync","size","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","retina_detect","initialState","input","route","user","joined","App","calculateFaceLocation","ClarifaiBox","outputs","regions","region_info","bounding_box","document","getElementById","Number","top_row","left_col","right_col","bottom_row","displayBoundingBox","catch","err","params","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uUAkCeA,G,MAhCI,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,cACpB,OADoD,EAAjBC,WAG/B,yBAAKC,MAAO,CAAEC,QAAS,OAAQC,eAAgB,aAC7C,uBACEC,UAAU,2CACVC,QAAS,kBAAMN,EAAc,aAF/B,aAUF,yBAAKE,MAAO,CAAEC,QAAS,OAAQC,eAAgB,aAC7C,uBACEC,UAAU,2CACVC,QAAS,kBAAMN,EAAc,YAF/B,WAMA,uBACEK,UAAU,2CACVC,QAAS,kBAAMN,EAAc,cAF/B,eCKOO,G,MA1BG,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,eAClC,OACE,6BACE,uBAAGJ,UAAU,MAAb,kEAGA,yBAAKA,UAAU,UACb,yBAAKA,UAAU,iCACb,2BACEA,UAAU,qBACVK,KAAK,OACLC,YAAY,gCACZC,SAAUJ,IAEZ,4BACEH,UAAU,yDACVC,QAASG,GAFX,eCLKI,EATF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACpB,OACE,6BACE,yBAAKV,UAAU,OAAf,UAAyBS,EAAzB,qCACA,yBAAKT,UAAU,WAAWU,KCsBjBC,G,MAzBO,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,IACjC,OACE,yBAAKb,UAAU,aACb,yBAAKA,UAAU,gBACb,yBACEc,GAAG,aACHC,IAAI,GACJC,IAAKJ,EACLK,MAAM,QACNC,OAAO,SAET,yBACElB,UAAU,eACVH,MAAO,CACLsB,IAAKN,EAAIO,OACTC,OAAQR,EAAIS,UACZC,MAAOV,EAAIW,SACXC,KAAMZ,EAAIa,eC8FPC,E,YA/Gb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAORC,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SATzB,EAWnBC,iBAAmB,SAACL,GAClB,EAAKC,SAAS,CAAEK,eAAgBN,EAAMG,OAAOC,SAZ5B,EAenBG,eAAiB,WACf,EAAKN,SAAS,CAAEO,iBAAiB,IACjCC,MAAM,mDAAoD,CACxDC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBC,MAAO,EAAKC,MAAMd,YAClBe,SAAU,EAAKD,MAAMV,mBAGtBY,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKpB,SAAS,CAAEO,iBAAiB,IAC7Ba,EAAKN,QAAU,EAAKC,MAAMd,aAC5B,EAAKJ,MAAMjC,cAAc,QACzB,EAAKiC,MAAMwB,SAASD,KAEpBE,QAAQC,IAAIH,GACZI,MAAM,kDAGTP,QAlCH,EAAKF,MAAQ,CACXd,YAAa,GACbI,eAAgB,GAChBE,iBAAiB,GALF,E,sEAuCT,IAAD,OACP,OACE,6BACE,6BAAStC,UAAU,kEACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,WACb,8BAAUc,GAAG,UAAUd,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,WACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoBwD,QAAQ,iBAA7C,SAGA,2BACExD,UAAU,qEACVK,KAAK,QACLI,KAAK,gBACLK,GAAG,gBACHP,SAAUkD,KAAK5B,iBAGnB,yBAAK7B,UAAU,OACb,2BAAOA,UAAU,oBAAoBwD,QAAQ,YAA7C,YAGA,2BACExD,UAAU,uEACVK,KAAK,WACLI,KAAK,WACLK,GAAG,WACHP,SAAUkD,KAAKtB,oBAGnB,2BAAOnC,UAAU,8BAAjB,MAEDyD,KAAKX,MAAMR,gBACV,yBAAKtC,UAAU,IACb,2BACEC,QAASwD,KAAKpB,eACdrC,UAAU,2EACVK,KAAK,SACL6B,MAAM,0BAIV,yBAAKlC,UAAU,IACb,2BACEC,QAASwD,KAAKpB,eACdrC,UAAU,2EACVK,KAAK,SACL6B,MAAM,aAIZ,yBAAKlC,UAAU,eACb,uBACEC,QAAS,kBAAM,EAAK2B,MAAMjC,cAAc,aACxCK,UAAU,oCAFZ,YAMA,sDAC0B,6BAD1B,wD,GApGK0D,aCoINC,E,YAnIb,WAAY/B,GAAQ,IAAD,8BACjB,4CAAMA,KAQRgC,aAAe,SAAC9B,GACd,EAAKC,SAAS,CAAE8B,eAAgB/B,EAAMG,OAAOC,SAV5B,EAanBL,cAAgB,SAACC,GACf,EAAKC,SAAS,CAAE+B,gBAAiBhC,EAAMG,OAAOC,SAd7B,EAgBnBC,iBAAmB,SAACL,GAClB,EAAKC,SAAS,CAAEgC,mBAAoBjC,EAAMG,OAAOC,SAjBhC,EAoBnB8B,iBAAmB,WACjB,EAAKjC,SAAS,CAAEO,iBAAiB,IACjCC,MAAM,qDAAsD,CAC1DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBnC,KAAM,EAAKqC,MAAMe,eACjBhB,MAAO,EAAKC,MAAMgB,gBAClBf,SAAU,EAAKD,MAAMiB,uBAGtBf,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKpB,SAAS,CAAEO,iBAAiB,IACpB,uBAATa,GACFI,MAAM,sBACN,EAAK3B,MAAMjC,cAAc,cAEzB,EAAKiC,MAAMjC,cAAc,QACzB,EAAKiC,MAAMwB,SAASD,QArC1B,EAAKL,MAAQ,CACXe,eAAgB,GAChBC,gBAAiB,GACjBC,mBAAoB,GACpBzB,iBAAiB,GANF,E,sEA4CT,IACA3C,EAAkB8D,KAAK7B,MAAvBjC,cACR,OACE,6BACE,6BAASK,UAAU,kEACjB,0BAAMA,UAAU,gBACd,yBAAKA,UAAU,WACb,8BAAUc,GAAG,UAAUd,UAAU,6BAC/B,4BAAQA,UAAU,kBAAlB,YACA,yBAAKA,UAAU,OACb,2BAAOA,UAAU,oBAAoBwD,QAAQ,QAA7C,QAGA,2BACExD,UAAU,qEACVK,KAAK,OACLI,KAAK,OACLK,GAAG,OACHP,SAAUkD,KAAKG,gBAGnB,yBAAK5D,UAAU,OACb,2BAAOA,UAAU,oBAAoBwD,QAAQ,iBAA7C,SAGA,2BACExD,UAAU,qEACVK,KAAK,QACLI,KAAK,gBACLK,GAAG,gBACHP,SAAUkD,KAAK5B,iBAGnB,yBAAK7B,UAAU,OACb,2BAAOA,UAAU,oBAAoBwD,QAAQ,YAA7C,YAGA,2BACExD,UAAU,uEACVK,KAAK,WACLI,KAAK,WACLK,GAAG,WACHP,SAAUkD,KAAKtB,oBAGnB,2BAAOnC,UAAU,8BAAjB,MAGDyD,KAAKX,MAAMR,gBACV,yBAAKtC,UAAU,IACb,2BACEC,QAASwD,KAAKO,iBACdhE,UAAU,2EACVK,KAAK,SACL6B,MAAM,0BAIV,yBAAKlC,UAAU,IACb,2BACEC,QAASwD,KAAKO,iBACdhE,UAAU,2EACVK,KAAK,SACL6B,MAAM,cAIZ,yBAAKlC,UAAU,eACb,uBACEC,QAAS,kBAAMN,EAAc,WAC7BK,UAAU,oCAFZ,oB,GAjHO0D,a,gBC6GRO,G,MA/GF,CACXC,UAAW,CACTC,OAAQ,CACNjC,MAAO,GACPkC,QAAS,CACPC,QAAQ,EACRC,WAAY,MAGhBC,MAAO,CACLrC,MAAO,WAETsC,MAAO,CACLnE,KAAM,SACNoE,OAAQ,CACNxD,MAAO,EACPsD,MAAO,WAETG,QAAS,CACPC,SAAU,GAEZC,MAAO,CACL5D,IAAK,iBACLC,MAAO,IACPC,OAAQ,MAGZ2D,QAAS,CACP3C,MAAO,GACP4C,QAAQ,EACRC,KAAM,CACJV,QAAQ,EACRW,MAAO,EACPC,YAAa,GACbC,MAAM,IAGVC,KAAM,CACJjD,MAAO,EACP4C,QAAQ,EACRC,KAAM,CACJV,QAAQ,EACRW,MAAO,GACPI,SAAU,GACVF,MAAM,IAGVG,YAAa,CACXhB,QAAQ,EACRiB,SAAU,IACVf,MAAO,UACPM,QAAS,GACT5D,MAAO,GAETsE,KAAM,CACJlB,QAAQ,EACRW,MAAO,EACPQ,UAAW,OACXV,QAAQ,EACRW,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACPvB,QAAQ,EACRwB,QAAS,IACTC,QAAS,QAIfC,cAAe,CACbC,UAAW,SACXC,OAAQ,CACNC,QAAS,CACP7B,QAAQ,EACR8B,KAAM,QAERC,QAAS,CACP/B,QAAQ,EACR8B,KAAM,QAERE,QAAQ,GAEVC,MAAO,CACLC,KAAM,CACJjB,SAAU,IACVD,YAAa,CACXR,QAAS,IAGb2B,OAAQ,CACNlB,SAAU,IACVH,KAAM,GACNsB,SAAU,EACV5B,QAAS,EACTG,MAAO,GAET0B,QAAS,CACPpB,SAAU,IACVmB,SAAU,IAEZE,KAAM,CACJC,aAAc,GAEhBC,OAAQ,CACND,aAAc,KAIpBE,eAAe,I,yjBChGjB,IAAMC,EAAe,CACnBC,MAAO,GACPpG,SAAU,GACVC,IAAK,GACLoG,MAAO,SACPrH,YAAY,EACZsH,KAAM,CACJpG,GAAI,GACJL,KAAM,GACNoC,MAAO,GACPnC,QAAS,EACTyG,OAAQ,KA+HGC,E,YA1Hb,aAAe,IAAD,8BACZ,+CAIFC,sBAAwB,SAACpE,GACvB,IAAMqE,EACJrE,EAASsE,QAAQ,GAAGpE,KAAKqE,QAAQ,GAAGC,YAAYC,aAC5C9C,EAAQ+C,SAASC,eAAe,cAChC3G,EAAQ4G,OAAOjD,EAAM3D,OACrBC,EAAS2G,OAAOjD,EAAM1D,QAE5B,OADAmC,QAAQC,IAAIrC,EAAOC,EAAQoG,EAAYQ,SAChC,CACLpG,QAAS4F,EAAYS,SAAW9G,EAChCG,OAAQkG,EAAYQ,QAAU5G,EAC9BM,SAAUP,EAAQqG,EAAYU,UAAY/G,EAC1CK,UAAWJ,EAASoG,EAAYW,WAAa/G,IAhBnC,EAoBdgH,mBAAqB,SAACrH,GACpB,EAAKkB,SAAS,CAAElB,IAAKA,KArBT,EAwBdV,cAAgB,SAAC2B,GACf,EAAKC,SAAS,CAAEiF,MAAOlF,EAAMG,OAAOC,SAzBxB,EA4Bd9B,eAAiB,SAAC0B,GAChBS,MAAM,kDAAmD,CACvDC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnB9B,GAAI,EAAKgC,MAAMoE,KAAKpG,OAGrBkC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,EAAKpB,SAAS,CACZmF,KAAK,EAAD,GACC,EAAKpE,MAAMoE,KADZ,CAEFxG,QAASyC,SAKjB,EAAKpB,SAAS,CAAEnB,SAAU,EAAKkC,MAAMkE,QACrCzE,MAAM,qDAAsD,CAC1DC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAU,CACnBoE,MAAO,EAAKlE,MAAMkE,UAGnBhE,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACC,GAAD,OACJ,EAAKiF,mBAAmB,EAAKb,sBAAsBpE,OAEpDkF,OAAM,SAACC,GAAD,OAAS/E,QAAQC,IAAI8E,OA1DlB,EA6DdzI,cAAgB,SAACsH,GACD,YAAVA,EACF,EAAKlF,SAASgF,GACK,SAAVE,GACT,EAAKlF,SAAS,CAAEnC,YAAY,IAE9B,EAAKmC,SAAS,CAAEkF,MAAOA,KAnEX,EAsEd7D,SAAW,SAACD,GACV,EAAKpB,SAAS,CACZmF,KAAM,CACJpG,GAAIqC,EAAKrC,GACTL,KAAM0C,EAAK1C,KACXoC,MAAOM,EAAKN,MACZnC,QAASyC,EAAKzC,QACdyG,OAAQhE,EAAKgE,WA3EjB,EAAKrE,MAAQiE,EAFD,E,sEAkFJ,IAAD,EACsCtD,KAAKX,MAA1ClD,EADD,EACCA,WAAYgB,EADb,EACaA,SAAUqG,EADvB,EACuBA,MAAOpG,EAD9B,EAC8BA,IACrC,OACE,yBAAKb,UAAU,OACb,kBAAC,IAAD,CAAWqI,OAAQpE,EAAQjE,UAAU,cACrC,kBAAC,EAAD,CACEJ,WAAYA,EACZD,cAAe8D,KAAK9D,gBAGX,SAAVsH,EACC,6BACE,kBAAC,EAAD,CACExG,KAAMgD,KAAKX,MAAMoE,KAAKzG,KACtBC,QAAS+C,KAAKX,MAAMoE,KAAKxG,UAE3B,kBAAC,EAAD,CACEP,cAAesD,KAAKtD,cACpBC,eAAgBqD,KAAKrD,iBAEvB,kBAAC,EAAD,CAAeS,IAAKA,EAAKD,SAAUA,KAEzB,WAAVqG,EACF,6BACE,kBAAC,EAAD,CACEtH,cAAe8D,KAAK9D,cACpByD,SAAUK,KAAKL,YAInB,kBAAC,EAAD,CACEzD,cAAe8D,KAAK9D,cACpByD,SAAUK,KAAKL,gB,GAnHTM,aCfE4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASjB,SAASC,eAAe,SD2H3C,kBAAmBiB,WACrBA,UAAUC,cAAcC,MAAM/F,MAAK,SAAAgG,GACjCA,EAAaC,kB","file":"static/js/main.b291482e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n  if (isSignedIn) {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          className=\"f3 link grow black underline pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signout\")}\r\n        >\r\n          Sign Out\r\n        </p>\r\n      </nav>\r\n    );\r\n  } else {\r\n    return (\r\n      <nav style={{ display: \"flex\", justifyContent: \"flex-end\" }}>\r\n        <p\r\n          className=\"f3 link grow black underline pa3 pointer\"\r\n          onClick={() => onRouteChange(\"signin\")}\r\n        >\r\n          Sign In\r\n        </p>\r\n        <p\r\n          className=\"f3 link grow black underline pa3 pointer\"\r\n          onClick={() => onRouteChange(\"register\")}\r\n        >\r\n          Register\r\n        </p>\r\n      </nav>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./inputform.css\";\r\nconst InputForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        This Smart App will detect faces in your pictures. Try it out!\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"center form pa3 br2 shadow-5 \">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"text\"\r\n            placeholder=\"Enter the URL to your picture\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"w-30 f4 link ph3 pv2 dib white bg-light-purple primary\"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","import React from \"react\";\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className=\" f3\">{`${name}, your current entry count is...`}</div>\r\n      <div className=\"blue f1\">{entries}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Rank;\r\n","import React from \"react\";\r\nimport \"./facedetection.css\";\r\n\r\nconst FaceDetection = ({ imageUrl, box }) => {\r\n  return (\r\n    <div className=\"center ma\">\r\n      <div className=\"absolute mt3\">\r\n        <img\r\n          id=\"inputimage\"\r\n          alt=\"\"\r\n          src={imageUrl}\r\n          width=\"500px\"\r\n          height=\"auto\"\r\n        />\r\n        <div\r\n          className=\"bounding-box\"\r\n          style={{\r\n            top: box.toprow,\r\n            bottom: box.bottomrow,\r\n            right: box.rightcol,\r\n            left: box.leftcol\r\n          }}\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FaceDetection;\r\n","import React, { Component } from \"react\";\r\n\r\nclass SignIn extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n      isButtonLoading: false,\r\n    };\r\n  }\r\n  onEmailChange = (event) => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitSignin = () => {\r\n    this.setState({ isButtonLoading: true });\r\n    fetch(\"https://radiant-basin-43552.herokuapp.com/signin\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ isButtonLoading: false });\r\n        if (data.email === this.state.signInEmail) {\r\n          this.props.onRouteChange(\"home\");\r\n          this.props.loadUser(data);\r\n        } else {\r\n          console.log(data);\r\n          alert(\"Wrong combination of username and password\");\r\n        }\r\n      })\r\n      .then();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 fw6 ph0 mh0\">Sign In</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    onChange={this.onEmailChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n                <label className=\"pa0 ma0 lh-copy f6 pointer\"> </label>\r\n              </fieldset>\r\n              {this.state.isButtonLoading ? (\r\n                <div className=\"\">\r\n                  <input\r\n                    onClick={this.onSubmitSignin}\r\n                    className=\"b pa2 ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                    type=\"submit\"\r\n                    value=\"Loading, Please Wait\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"\">\r\n                  <input\r\n                    onClick={this.onSubmitSignin}\r\n                    className=\"b pa2 ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                    type=\"submit\"\r\n                    value=\"Sign in\"\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"lh-copy mt3\">\r\n                <p\r\n                  onClick={() => this.props.onRouteChange(\"register\")}\r\n                  className=\"f5 pa3 link dim black db pointer\"\r\n                >\r\n                  Register\r\n                </p>\r\n                <p>\r\n                  For Testing Purpose Use <br></br>Email: test123@gmail.com,\r\n                  Password: test123\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SignIn;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      registeredName: \"\",\r\n      registeredEmail: \"\",\r\n      registeredPassword: \"\",\r\n      isButtonLoading: false,\r\n    };\r\n  }\r\n  onNameChange = (event) => {\r\n    this.setState({ registeredName: event.target.value });\r\n  };\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ registeredEmail: event.target.value });\r\n  };\r\n  onPasswordChange = (event) => {\r\n    this.setState({ registeredPassword: event.target.value });\r\n  };\r\n\r\n  onSubmitRegister = () => {\r\n    this.setState({ isButtonLoading: true });\r\n    fetch(\"https://radiant-basin-43552.herokuapp.com/register\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        name: this.state.registeredName,\r\n        email: this.state.registeredEmail,\r\n        password: this.state.registeredPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({ isButtonLoading: false });\r\n        if (data === \"unable to register\") {\r\n          alert(\"Unable to Register\");\r\n          this.props.onRouteChange(\"register\");\r\n        } else {\r\n          this.props.onRouteChange(\"home\");\r\n          this.props.loadUser(data);\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <div>\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n          <main className=\"pa4 black-80\">\r\n            <div className=\"measure\">\r\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                <legend className=\"f2 fw6 ph0 mh0\">Register</legend>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                    Name\r\n                  </label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    onChange={this.onNameChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mt3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                    Email\r\n                  </label>\r\n                  <input\r\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"email\"\r\n                    name=\"email-address\"\r\n                    id=\"email-address\"\r\n                    onChange={this.onEmailChange}\r\n                  />\r\n                </div>\r\n                <div className=\"mv3\">\r\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                    Password\r\n                  </label>\r\n                  <input\r\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"password\"\r\n                    onChange={this.onPasswordChange}\r\n                  />\r\n                </div>\r\n                <label className=\"pa0 ma0 lh-copy f6 pointer\"> </label>\r\n              </fieldset>\r\n\r\n              {this.state.isButtonLoading ? (\r\n                <div className=\"\">\r\n                  <input\r\n                    onClick={this.onSubmitRegister}\r\n                    className=\"b pa2 ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                    type=\"submit\"\r\n                    value=\"Loading, Please Wait\"\r\n                  />\r\n                </div>\r\n              ) : (\r\n                <div className=\"\">\r\n                  <input\r\n                    onClick={this.onSubmitRegister}\r\n                    className=\"b pa2 ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                    type=\"submit\"\r\n                    value=\"Register\"\r\n                  />\r\n                </div>\r\n              )}\r\n              <div className=\"lh-copy mt3\">\r\n                <p\r\n                  onClick={() => onRouteChange(\"signin\")}\r\n                  className=\"f5 pa3 link dim black db pointer\"\r\n                >\r\n                  Sign in\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// const Register = ({ onRouteChange }) => {\r\n//   return;\r\n// };\r\n\r\nexport default Register;\r\n","var Params = {\r\n  particles: {\r\n    number: {\r\n      value: 20,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800\r\n      }\r\n    },\r\n    color: {\r\n      value: \"#ffffff\"\r\n    },\r\n    shape: {\r\n      type: \"circle\",\r\n      stroke: {\r\n        width: 0,\r\n        color: \"#000000\"\r\n      },\r\n      polygon: {\r\n        nb_sides: 5\r\n      },\r\n      image: {\r\n        src: \"img/github.svg\",\r\n        width: 100,\r\n        height: 100\r\n      }\r\n    },\r\n    opacity: {\r\n      value: 0.5,\r\n      random: false,\r\n      anim: {\r\n        enable: false,\r\n        speed: 1,\r\n        opacity_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    size: {\r\n      value: 3,\r\n      random: true,\r\n      anim: {\r\n        enable: false,\r\n        speed: 40,\r\n        size_min: 0.1,\r\n        sync: false\r\n      }\r\n    },\r\n    line_linked: {\r\n      enable: true,\r\n      distance: 150,\r\n      color: \"#ffffff\",\r\n      opacity: 0.4,\r\n      width: 1\r\n    },\r\n    move: {\r\n      enable: true,\r\n      speed: 6,\r\n      direction: \"none\",\r\n      random: false,\r\n      straight: false,\r\n      out_mode: \"out\",\r\n      bounce: false,\r\n      attract: {\r\n        enable: false,\r\n        rotateX: 600,\r\n        rotateY: 1200\r\n      }\r\n    }\r\n  },\r\n  interactivity: {\r\n    detect_on: \"window\",\r\n    events: {\r\n      onhover: {\r\n        enable: true,\r\n        mode: \"grab\"\r\n      },\r\n      onclick: {\r\n        enable: false,\r\n        mode: \"push\"\r\n      },\r\n      resize: true\r\n    },\r\n    modes: {\r\n      grab: {\r\n        distance: 200,\r\n        line_linked: {\r\n          opacity: 1\r\n        }\r\n      },\r\n      bubble: {\r\n        distance: 400,\r\n        size: 40,\r\n        duration: 2,\r\n        opacity: 8,\r\n        speed: 3\r\n      },\r\n      repulse: {\r\n        distance: 200,\r\n        duration: 0.4\r\n      },\r\n      push: {\r\n        particles_nb: 4\r\n      },\r\n      remove: {\r\n        particles_nb: 2\r\n      }\r\n    }\r\n  },\r\n  retina_detect: true\r\n};\r\n\r\nexport default Params;\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navigation from \"./components/navigation/navigation\";\r\nimport InputForm from \"./components/inputform/inputform\";\r\nimport Rank from \"./components/rank/rank\";\r\nimport FaceDetection from \"./components/facedetection/facedetection\";\r\nimport SignIn from \"./components/signin/signin\";\r\nimport Register from \"./components/registration/registration\";\r\nimport Particles from \"react-particles-js\";\r\nimport \"tachyons/css/tachyons.min.css\";\r\nimport Params from \"./pointers\";\r\n\r\nconst initialState = {\r\n  input: \"\",\r\n  imageUrl: \"\",\r\n  box: {},\r\n  route: \"signin\",\r\n  isSignedIn: false,\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    entries: 0,\r\n    joined: \"\",\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  calculateFaceLocation = (response) => {\r\n    const ClarifaiBox =\r\n      response.outputs[0].data.regions[0].region_info.bounding_box;\r\n    const image = document.getElementById(\"inputimage\");\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    console.log(width, height, ClarifaiBox.top_row);\r\n    return {\r\n      leftcol: ClarifaiBox.left_col * width,\r\n      toprow: ClarifaiBox.top_row * height,\r\n      rightcol: width - ClarifaiBox.right_col * width,\r\n      bottomrow: height - ClarifaiBox.bottom_row * height,\r\n    };\r\n  };\r\n\r\n  displayBoundingBox = (box) => {\r\n    this.setState({ box: box });\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  onButtonSubmit = (event) => {\r\n    fetch(\"https://radiant-basin-43552.herokuapp.com/image\", {\r\n      method: \"put\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        id: this.state.user.id,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        this.setState({\r\n          user: {\r\n            ...this.state.user,\r\n            entries: data,\r\n          },\r\n        });\r\n      });\r\n\r\n    this.setState({ imageUrl: this.state.input });\r\n    fetch(\"https://radiant-basin-43552.herokuapp.com/imageurl\", {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        input: this.state.input,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) =>\r\n        this.displayBoundingBox(this.calculateFaceLocation(response))\r\n      )\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === \"signout\") {\r\n      this.setState(initialState);\r\n    } else if (route === \"home\") {\r\n      this.setState({ isSignedIn: true });\r\n    }\r\n    this.setState({ route: route });\r\n  };\r\n\r\n  loadUser = (data) => {\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, box } = this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        <Particles params={Params} className=\"particles\" />\r\n        <Navigation\r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}\r\n        />\r\n\r\n        {route === \"home\" ? (\r\n          <div>\r\n            <Rank\r\n              name={this.state.user.name}\r\n              entries={this.state.user.entries}\r\n            />\r\n            <InputForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n            <FaceDetection box={box} imageUrl={imageUrl} />\r\n          </div>\r\n        ) : route === \"signin\" ? (\r\n          <div>\r\n            <SignIn\r\n              onRouteChange={this.onRouteChange}\r\n              loadUser={this.loadUser}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Register\r\n            onRouteChange={this.onRouteChange}\r\n            loadUser={this.loadUser}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}